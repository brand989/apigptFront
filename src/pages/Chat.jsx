import React, { useState, useEffect } from "react";
import { useWebSocket } from "../WebSocketProvider"; // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ WebSocket –∫–æ–Ω—Ç–µ–∫—Å—Ç—É

const Chat = ({ chatId }) => { // chatId —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∫–∞–∫ –ø—Ä–æ–ø—Å
  const { sendMessage } = useWebSocket();
  const [messages, setMessages] = useState([]);

  const [recipient, setRecipient] = useState(""); // –î–ª—è ID —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
  const [text, setText] = useState(""); // –î–ª—è —Ç–µ–∫—Å—Ç–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    if (chatId) {
      // –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞
      fetch(`http://localhost:3000/api/message/${chatId}`, {
        method: "GET",
        credentials: "include",
      })

        .then((res) => res.json())
        .then((data) => {
          console.log("–ó–∞–≥—Ä—É–∂–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è:", data);
          setMessages(data);
        })
        .catch((err) => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π:", err));
    }
  }, [chatId]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
  const handleSendMessage = () => {
    if (recipient && text.trim()) {
      sendMessage(chatId, recipient, text); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —á–∞—Ç —á–µ—Ä–µ–∑ WebSocket
      setText("");  // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    }
  };

  console.log("üîÑ Chat –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–±–Ω–æ–≤–∏–ª—Å—è, —Å–æ–æ–±—â–µ–Ω–∏–π:", messages.length);

  return (
    <div>
      <h2>–ß–∞—Ç: {chatId}</h2>

      {/* –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π */}
      <div
        style={{
          border: "1px solid black",
          padding: "10px",
          margin: "10px 0",
          maxHeight: "300px",
          overflowY: "auto",
        }}
      >
        {messages.length === 0 ? (
          <p>–°–æ–æ–±—â–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç</p>
        ) : (
          messages.map((msg, index) => (
            <p key={index}>
              <strong>
                {msg.sender === recipient
                  ? "–í—ã"
                  : msg.sender === "ChatGPT" // –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å ‚Äî –±–æ—Ç
                  ? "–ë–æ—Ç"
                  : "–î—Ä—É–≥"}:
              </strong>{" "}
              {msg.text}
            </p>
          ))
        )}
      </div>

      {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è */}
      <input
        type="text"
        placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        value={text}
        onChange={(e) => setText(e.target.value)}
      />
      <button onClick={handleSendMessage}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
    </div>
  );
};

export default Chat;