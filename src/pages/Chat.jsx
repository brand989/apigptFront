import React, { useState } from "react";
import { useWebSocket } from "../WebSocketProvider"; // ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å

const Chat = () => {
  const { messages = [], sendMessage } = useWebSocket(); // ‚úÖ –¢–µ–ø–µ—Ä—å sendMessage –Ω–µ undefined
  const [recipient, setRecipient] = useState("");
  const [text, setText] = useState("");

  const handleSendMessage = () => {
    if (recipient && text.trim()) {
      sendMessage(recipient, text); // ‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ WebSocket
      setText("");
    }
  };
  console.log("üîÑ Chat –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–±–Ω–æ–≤–∏–ª—Å—è, —Å–æ–æ–±—â–µ–Ω–∏–π:", messages.length);
  return (
    <div>
      <h2>–ß–∞—Ç</h2>

      {/* –í–≤–æ–¥ ID —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ */}
      <div>
        <input
          type="text"
          placeholder="ID —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞"
          value={recipient}
          onChange={(e) => setRecipient(e.target.value)}
        />
        <button onClick={() => sendMessage(recipient, text)}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ</button>
      </div>

      {/* –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π */}
      <div style={{ border: "1px solid black", padding: "10px", margin: "10px 0", maxHeight: "300px", overflowY: "auto" }}>
        {messages.length === 0 ? (
          <p>–°–æ–æ–±—â–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç</p>
        ) : (
          messages.map((msg, index) => (
            <p key={index}>
              <strong>{msg.sender === recipient ? "–í—ã" : "–î—Ä—É–≥"}:</strong> {msg.text}
            </p>
          ))
        )}
      </div>

      {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è */}
      <input
        type="text"
        placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        value={text}
        onChange={(e) => setText(e.target.value)}
      />
      <button onClick={handleSendMessage}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
    </div>
  );
};

export default Chat;